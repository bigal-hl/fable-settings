{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/Fable-Settings-Default.json","fable-settings.min.js","source/Fable-Settings.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Product","ProductVersion","ConfigFile","LogStreams","level","2","FableSettings","[object Object]","pFableSettings","this","default","buildDefaultSettings","tmpSettings","merge","base","JSON","parse","stringify","DefaultConfigFile","pException","console","log","settings","pSettingsFrom","pSettingsTo","tmpSettingsFrom","tmpSettingsTo","Object","assign","new","pSettings","./Fable-Settings-Default"],"mappings":"CAAA,WAAA,OAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,GAAA,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,GCAAI,EAAAJ,QAAA,CACAK,QAAA,sBACAC,eAAA,QAEAC,YAAA,EAEAC,WACA,CACA,CACAC,MAAA,YCME,IAAIC,EAAE,CAAC,SAAShB,EAAQU,EAAOJ,GCCjC,MAAAW,EAEAC,YAAAC,GAEAC,KAAAC,QAAAD,KAAAE,uBAGA,IAAAC,EAAAH,KAAAI,MAAAL,EAAAC,KAAAE,wBAKA,GAFAF,KAAAK,KAAAC,KAAAC,MAAAD,KAAAE,UAAAL,IAEAA,EAAAM,kBAEA,IAGAN,EAAAH,KAAAI,MAAAxB,EAAAuB,EAAAM,mBAAAN,GAEA,MAAAO,GAIAC,QAAAC,IAAA,2HACAD,QAAAC,IAAA,2BAAAF,GAIA,GAAAP,EAAAV,WAEA,IAGAU,EAAAH,KAAAI,MAAAxB,EAAAuB,EAAAV,YAAAU,GAEA,MAAAO,GAIAC,QAAAC,IAAA,mHACAD,QAAAC,IAAA,2BAAAF,GAIAV,KAAAa,SAAAV,EAIAL,uBAEA,OAAAQ,KAAAC,MAAAD,KAAAE,UAAA5B,EAAA,8BAIAkB,MAAAgB,EAAAC,GAGA,IAAAC,EAAA,iBAAA,EAAAF,EAAA,GAEAG,EAAA,iBAAA,EAAAF,EAAAf,KAAAa,SAIA,OAFAI,EAAAC,OAAAC,OAAAF,EAAAD,GAMAlB,KAAAgB,GAGA,IAAAE,EAAA,iBAAA,EAAAF,EAAA,GAIA,OAFAd,KAAAa,SAAAK,OAAAC,OAAAH,EAAAhB,KAAAa,UAEAb,KAAAa,UAUAvB,EAAAJ,QAAA,CAAAkC,IALA,SAAAC,GAEA,OAAA,IAAAxB,EAAAwB,IAGAxB,cAAAA,IDkBE,CAACyB,2BAA2B,KAAK,GAAG,CAAC","file":"fable-settings.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\n\t\"Product\": \"ApplicationNameHere\",\n\t\"ProductVersion\": \"0.0.0\",\n\n\t\"ConfigFile\": false,\n\n\t\"LogStreams\":\n\t[\n\t\t{\n\t\t\t\"level\": \"trace\"\n\t\t}\n\t]\n}\n",null,"/**\n* Fable Settings Add-on\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Settings\n*/\n\n/**\n* Fable Solution Settings\n*\n* @class FableSettings\n* @constructor\n*/\n\nclass FableSettings\n{\n\tconstructor(pFableSettings)\n\t{\n\t\tthis.default = this.buildDefaultSettings();\n\n\t\t// Construct a new settings object\n\t\tlet tmpSettings = this.merge(pFableSettings, this.buildDefaultSettings());\n\n\t\t// The base settings object (what they were on initialization, before other actors have altered them)\n\t\tthis.base = JSON.parse(JSON.stringify(tmpSettings));\n\n\t\tif (tmpSettings.DefaultConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a DEFAULT configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.DefaultConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Default configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tif (tmpSettings.ConfigFile)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// If there is a configuration file, try to load and merge it.\n\t\t\t\ttmpSettings = this.merge(require(tmpSettings.ConfigFile), tmpSettings);\n\t\t\t}\n\t\t\tcatch (pException)\n\t\t\t{\n\t\t\t\t// Why this?  Often for an app we want settings to work out of the box, but\n\t\t\t\t// would potentially want to have a config file for complex settings.\n\t\t\t\tconsole.log('Fable-Settings Warning: Configuration file specified but there was a problem loading it.  Falling back to base.');\n\t\t\t\tconsole.log('     Loading Exception: '+pException);\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = tmpSettings;\n\t}\n\n\t// Build a default settings object.  Use the JSON jimmy to ensure it is always a new object.\n\tbuildDefaultSettings()\n\t{\n\t\treturn JSON.parse(JSON.stringify(require('./Fable-Settings-Default')))\n\t}\n\n\t// Merge some new object into the existing settings.\n\tmerge(pSettingsFrom, pSettingsTo)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\t\t// Default to the settings object if none is passed in for the merge.\n\t\tlet tmpSettingsTo = (typeof(pSettingsTo) === 'object') ? pSettingsTo : this.settings;\n\n\t\ttmpSettingsTo = Object.assign(tmpSettingsTo, tmpSettingsFrom);\n\n\t\treturn tmpSettingsTo;\n\t}\n\n\t// Fill in settings gaps without overwriting settings that are already there\n\tfill(pSettingsFrom)\n\t{\n\t\t// If an invalid settings from object is passed in (e.g. object constructor without passing in anything) this should still work\n\t\tlet tmpSettingsFrom = (typeof(pSettingsFrom) === 'object') ? pSettingsFrom : {};\n\n\t\tthis.settings = Object.assign(tmpSettingsFrom, this.settings);\n\n\t\treturn this.settings;\n\t}\n};\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableSettings(pSettings);\n}\n\nmodule.exports = {new:autoConstruct, FableSettings:FableSettings};\n"]}